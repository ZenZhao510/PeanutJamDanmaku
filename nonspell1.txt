#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Normal Shot 1"]
#Text["This is the first non-spell card sequence"]

#include "script/default_system/Default_ShotConst.txt"

// declares boss variable
let objBoss;
// declares scene
let objScene = GetEnemyBossSceneObjectID();

@Initialize {
    // initializes boss variable and registers as enemy
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);

    // moves boss to centerX of frame, 60 from top
    ObjMove_SetDestAtFrame(objBoss, getCenterX(), 60, 60);

    ObjEnemyBossScene_StartSpell(objScene);
    
    bossRender;
    spellCard;
    endSpell;
    movement;
}

@Event {
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(4000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(20);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
}

@MainLoop {
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}

task bossRender {
    // sets boss texture and spawns them on frame
    let imgBoss = GetCurrentScriptDirectory() ~ "unnamedCardDealer.png";
    ObjPrim_SetTexture(objBoss, imgBoss);
    ObjSprite2D_SetSourceRect(objBoss, 0, 0, 80, 80);
    ObjSprite2D_SetDestCenter(objBoss);

}

task endSpell {
    // checks spell card life, yields if over 0 (if spell card hasn't finished)
    while (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
        yield;
    }
    // add spell card bonus to score after spell card ends
    if (ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)+ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT) == 0) {
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    CloseScript(GetOwnScriptID());
    return;
}

task spellCard {
    fireA;
}

task fireA {
    while (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
        let angleT = GetAngleToPlayer(objBoss);
        let angleFlip = -1;
        ascent (i in 0..3) {
            ascent (j in -1..2) {
                let obj = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 4.5 - i / 3, angleT - i * 10 * j, 33 + 2 * i, 5); 
                homingAfter(obj, 45);
            }
        }
        wait(60);
    }
}

task homingAfter(obj, n) {
    wait(n);
    ObjMove_SetAngle(obj, GetAngleToPlayer(obj));
}

task movement {
    while (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
        ObjMove_SetDestAtFrame(objBoss, rand(getCenterX() + 90, getCenterX() - 90), rand(getCenterY() + 60, getCenterY() - 120), 60);
        wait(240);
    }
}

// wait function for tasks
function wait(n) {
    loop (n) {
        yield;
    }
}

// gets center x coord of frame
function getCenterX() {
    return GetStgFrameWidth() / 2;
}

//gets center y coord of frame
function getCenterY() {
    return GetStgFrameHeight() / 2;
}